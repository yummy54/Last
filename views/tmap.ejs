
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>길 안내</title>
<link rel="stylesheet" href="../stylesheets/tmapstyle.css">
<script src="https://apis.openapi.sk.com/tmap/jsv2?version=1&appKey="></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript">							
	var map, marker;
	// 페이지가 로딩이 된 후 호출하는 함수입니다.

	function initTmap(){
		
	
		// HTML5의 geolocation으로 사용할 수 있는지 확인합니다      
		navigator.geolocation.getCurrentPosition(
		    function(position) {
				lat = position.coords.latitude;
				lon = position.coords.longitude;

				// map 생성
				// Tmapv2.map을 이용하여, 지도가 들어갈 div, 넓이, 높이를 설정합니다.
				map = new Tmapv2.Map("map_div", {
					center : new Tmapv2.LatLng(lat, lon), // 지도 초기 좌표
					width : "50%", // map의 width 설정
					height : "400px", // map의 height 설정	
				});
				
				//팝업 생성
				var content = ""

				marker = new Tmapv2.Marker({
					position : new Tmapv2.LatLng(lat,lon),
					map : map
				});

				InfoWindow = new Tmapv2.InfoWindow({
					position : new Tmapv2.LatLng(lat,lon),
					content : content,
					type : 2,
					map : map
				});
				map.setCenter(new Tmapv2.LatLng(lat,lon));
				map.setZoom(15);

				var s_latlng = new Tmapv2.LatLng (lat, lon);
				var e_latlng = new Tmapv2.LatLng (<%=lat1 %>, <%=lon1 %>);
				
				var optionObj = {
					reqCoordType:"WGS84GEO", //요청 좌표계 옵셥 설정입니다.
					resCoordType:"WGS84GEO",  //응답 좌표계 옵셥 설정입니다.
					trafficInfo:"Y"
				};
				
				var params = {
					onComplete:onComplete,
					onProgress:onProgress,
					onError:onError
				};
				
				// TData 객체 생성
				var tData = new Tmapv2.extension.TData();
			
				// TData 객체의 경로요청 함수
				tData.getRoutePlanJson(s_latlng, e_latlng, optionObj, params);
				
				var headers = {};
				headers["appKey"]=;

				$.ajax({
					method:"POST",
					headers : headers, 
					url:"https://apis.openapi.sk.com/tmap/routes?version=1&format=json",//
					async:false,
					data:{ 
						startX : lon,
						startY : lat,
						endX : <%=lon1 %>,
						endY : <%=lat1 %>,
						reqCoordType : "WGS84GEO",
						resCoordType : "WGS84GEO",
						angle : "172",
						searchOption : "0",
						trafficInfo : "Y"
					},
					success:function(response){
						// console.log(response.features[0].properties.totalDistance)  //총 거리
						// console.log(response.features[0].properties.totalTime)		//총 시간

						let totalDis = response.features[0].properties.totalDistance;
						let totalTime = response.features[0].properties.totalTime;
						// 1. 저 총거리랑 시간 변환 -> 우리가 아는 ex) 시분초/ km  등 단위로 
						// 2. 여기서 html에 추가하는거 잇음 하면됨ㅅㄱ 이거  -> 할수잇어? 검색해 js에서도 html 위치잡아서 추가되게끔할수있ㅇ음 ->지도밑에 일단보이게끔 하면되겟지?
						// 머해야할지 알겟지? 저 값들을 html에 보여주면되는거아닌가요 후...

						var hour = parseInt(totalTime/3600);
						var min = parseInt((totalTime%3600)/60);
						var sec = totalTime % 60;

						var time = hour + "시간 " + min + "분 " + sec + "초";

						$('#test111').after("<div class=comment>거리 : " + totalDis/1000 + "km " + "<br>" + "<br>" + "소요시간 : " + time +"</div>")
						$('.test111').css({
							color: "white"
						});
					},
					error:function(request,status,error){
						console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
						
					}
				})
			}
		);

		return;
	};	
		


	//경로안내
	function onComplete() {
		// console.log(this._responseData); //json으로 데이터를 받은 정보들을 콘솔창에서 확인할 수 있습니다.
	 
		var jsonObject = new Tmapv2.extension.GeoJSON();
		var jsonForm = jsonObject.rpTrafficRead(this._responseData);

		console.log(jsonForm)
	
		//교통정보 표출시 생성되는 LineColor 입니다.
        var trafficColors = {
    
            // 사용자가 임의로 색상을 설정할 수 있습니다.
            // 교통정보 옵션 - 라인색상
            trafficDefaultColor:"#000000", //교통 정보가 없을 때
            trafficType1Color:"#009900", //원할
            trafficType2Color:"#7A8E0A", //서행
            trafficType3Color:"#8E8111",  //정체
            trafficType4Color:"#FF0000"  //정체
        };
        jsonObject.drawRouteByTraffic(map, jsonForm, trafficColors);
		map.setZoom(14);
	}
	
	//데이터 로드중 실행하는 함수입니다.
	function onProgress(){
	      
	}
	
	//데이터 로드 중 에러가 발생시 실행하는 함수입니다.
	function onError(){
		alert("onError");
	}

</script>
</head>

<h2 style="font-size: 50px; color: #D98E0D; text-align: center; font-family: 'Black Han Sans', sans-serif;">길 안내</h2>

<body id="test111" onload="initTmap()" bgcolor="black"><!-- 맵 생성 실행 -->
	<a href="/"><img src="../images/parkinglogo.png" width="300" height="300" style="margin-top: -100px"></a>
	<div id="map_div" style="margin-left: 420px; margin-top: -200px"></div>
</body>
</html>
